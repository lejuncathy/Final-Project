L <- L * (1 / mu) * exp(-data[i] / mu)
}
return(L)
}
# Likelihood for interval-censored data
likelihood_interval <- function(mu, data_intervals) {
likelihood <- 1
for (interval in data_intervals) {
a <- interval[1]
b <- interval[2]
likelihood <- likelihood * (exp(-a / mu) - exp(-b / mu))
}
return(likelihood)
}
# Likelihood for right-censored data combined with interval-censored data
likelihood_right <- function(mu, data_intervals, right_censored) {
likelihood <- 1
# Process interval-censored data excluding right-censored ones
for (interval in data_intervals) {
a <- interval[1]
b <- interval[2]
likelihood <- likelihood * (exp(-a / mu) - exp(-b / mu))
}
# Process right-censored data
for (c in right_censored) {
likelihood <- likelihood * exp(-c / mu)
}
return(likelihood)
}
# Define parameters
mu_values <- seq(0.1, 20, length.out = 500)
# (a) Exact observations
likelihood_a <- sapply(mu_values, function(mu) likelihood_exact(mu, data))
likelihood_a <- likelihood_a / max(likelihood_a)  # Normalize
# (b) Interval-censored observations
intervals <- list(c(3.0, 4.0), c(6.0, 7.0), c(2.0, 3.0), c(10.0, 11.0), c(8.0, 9.0), c(7.0, 8.0))
likelihood_b <- sapply(mu_values, function(mu) likelihood_interval(mu, intervals))
likelihood_b <- likelihood_b / max(likelihood_b)  # Normalize
# (c) Interval-censored observations with right censoring for X4 and X7
right_censored <- c(10, 10)
likelihood_c <- sapply(mu_values, function(mu) likelihood_right(mu, intervals, right_censored))
likelihood_c <- likelihood_c / max(likelihood_c)  # Normalize
# Plot (a)
plot(mu_values, likelihood_a, type = "l", col = "blue", lwd = 2,
xlab = expression(mu ~ "(Mean Survival Time)"), ylab = "Normalized Likelihood",
main = "Exact Observations")
# Plot (b)
plot(mu_values, likelihood_b, type = "l", col = "red", lwd = 2,
xlab = expression(mu ~ "(Mean Survival Time)"), ylab = "Normalized Likelihood",
main = "Interval Censoring")
# Plot (c)
plot(mu_values, likelihood_c, type = "l", col = "green", lwd = 2,
xlab = expression(mu ~ "(Mean Survival Time)"), ylab = "Normalized Likelihood",
main = "Interval + Right Censoring")
# Given data
data <- c(1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <- L_gamma / L_norm
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Given data
data <- c(1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Given data
data <- c(1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c(-1.2, 6.6, 3.4, 7.1, 11.8)
L_norm_modified <- likelihood_normal(data_modified, mu_norm, sigma2_norm)
L_gamma_modified <- likelihood_gamma(data_modified, alpha_gamma, beta_gamma)
# Output modified results
cat("\nAfter modifying the first observation:\n")
cat("Likelihood under normal distribution:", L_norm_modified, "\n")
cat("Likelihood under gamma distribution:", L_gamma_modified, "\n")
bayes_factor_modified <- L_gamma_modified / L_norm_modified
cat("Bayes factor (Gamma vs Normal):", bayes_factor_modified, "\n")
# Given data
data <- c(-1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Given data
data <- c(-1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c(-1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c( 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c( 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c( 1.2,6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c( 1.2 , 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c( 1.2 , 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c(1.2 , 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Sensitivity analysis: changing the first observation
data_modified <- c( 1.2 , 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <-  L_norm/L_gamma
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Given data
data <- c(1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <- L_gamma / L_norm
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Given data
data <- c(1.2, 6.6, 3.4, 7.1, 11.8)
# Normal distribution parameters
mu_norm <- 5
sigma2_norm <- 9
# Gamma distribution parameters
mean_gamma <- 5
var_gamma <- 9
beta_gamma <- var_gamma / mean_gamma  # beta = variance / mean
alpha_gamma <- mean_gamma / beta_gamma  # alpha = mean / beta
# Likelihood for normal distribution
likelihood_normal <- function(data, mu, sigma2) {
prod((1 / sqrt(2 * pi * sigma2)) * exp(-((data - mu)^2) / (2 * sigma2)))
}
# Likelihood for gamma distribution
likelihood_gamma <- function(data, alpha, beta) {
prod((data^(alpha - 1) * exp(-data / beta)) / (gamma(alpha) * beta^alpha))
}
# Compute likelihoods
L_norm <- likelihood_normal(data, mu_norm, sigma2_norm)
L_gamma <- likelihood_gamma(data, alpha_gamma, beta_gamma)
# Output the results
cat("Likelihood under normal distribution:", L_norm, "\n")
cat("Likelihood under gamma distribution:", L_gamma, "\n")
# Strength of evidence (Bayes factor)
bayes_factor <- L_gamma / L_norm
cat("Bayes factor (Gamma vs Normal):", bayes_factor, "\n")
# Given constants
log_8 <- log(8)
z_critical <- qnorm(0.2)  # z_critical = Φ^(-1)(0.2)
# Function to solve for n
solve_n <- function() {
uniroot(function(n) {
left <- log_8 + n / 2 - n
right <- z_critical * sqrt(n)
left - right
}, lower = 1, upper = 1000)$root
}
# Compute the smallest n
n_result <- solve_n()
cat("Smallest n:", n_result, "\n")
url_for_data <- "https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = True)
head(data)
url_for_data <- "https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
head(data)
install.packages("tinytex")
tinytex::install_tinytex()
Sys.Date()
format(Sys.Date(), "%m-%d-%Y")
current_value<-10
while (current_value < 15) {
random_number <- runif(1, min = 0, max = 1)
current_value <- current_value + random_number
cat("Current value:", current_value, "\n")
}
# Generate 5000 random samples from a normal distribution
x <- rnorm(5000, mean = 0, sd = 1)  # Change mean and sd as needed
# Plot histogram
hist(x, breaks = 50, col = "skyblue", border = "black",
main = "Histogram of 5000 Random Samples",
xlab = "Value of x", ylab = "Frequency")
# Generate 5000 random samples from a normal distribution
x <- rnorm(5000, mean = 0, sd = 1)  # Change mean and sd as needed
# Plot histogram
hist(x, breaks = 50, col = "blue", border = "black",
main = "Histogram of 5000 Random Samples",
xlab = "Value of x", ylab = "Frequency")
setwd("D:/Data550/Final_project")
